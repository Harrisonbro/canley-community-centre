@import 'normalize';
@import 'breakpoint';

$sml: 20em;
$med: 32em;
$lrg: 50em;

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

html {
    box-sizing: border-box;
    font-family: "Helvetica Neue", arial, sans-serif;

    &.fonts-loaded,
    &.no-backgroundsize {
        font-family: "Open Sans", "Helvetica Neue", arial, sans-serif;
        font-weight: 400;
    }
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

img {
    max-width: 100%;
}

html,
body {
    // min-height: 100%;
}

html {
    background: black
}

// For older browsers
.splashImg {
    z-index: -10;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
}

// For newer browsers
html.backgroundsize {
    background: black url("/public/images/splash-300.jpg") no-repeat center center fixed;
    background-size: cover;

    .splashImg {
        background: none;
        display: none;
    }
}

$aspectRatio: 7/5;

@each $size in 0px, 400px, 600px, 800px, 1000px, 1200px, 1400px {
    @include breakpoint('min-width' $size) {
        // If we're passed a list just grab the size value from it
        @if type_of($size) == "list" {
            $size: nth($size, 1);
        }

        @if $size == 0px {
            $size: 200px; // Default smallest size for small screens
        }

        html.backgroundsize {
            background-image: url("/public/images/splash-#{strip-unit($size + 200)}.jpg?src=css");
        }
    }

    // If the viewport is tall, switch to vertical image
    @include breakpoint((('min-width' $size) ('min-height' $size*$aspectRatio))) {
        // If we're passed a list just grab the size value from it
        @if type_of($size) == "list" {
            $size: nth($size, 1);
        }

        @if $size == 0px {
            $size: 200px; // Default smallest size for small screens
        }

        html.backgroundsize {
            background-image: url("/public/images/splash-vertical-#{strip-unit($size + 200)}.jpg?src=css");
            background-position: center top;
            background-size: 100%;
        }
    }
}

/* picture */.logo {
    margin: 0.5em 0.5em 1em;
    width: 30%;
    max-width: 25em;
    display: inline-block;
    z-index: 1;

    img {
        height: auto;
        width: 100%;
    }

    @include breakpoint($sml) {
        //margin: 1.25em;
        //width: 25%;
    }

    @include breakpoint($lrg) {
        //margin: 2em;
        //width: 19em;
    }
}

.strapline__container {
    text-align: center;
}
/* picture */.strapline {
    display: inline-block;
    margin: 1em 0.5em 2em;
    width: 90%;
    filter: drop-shadow(0px 4px 8px rgba(0, 0, 0, 1));

    @include breakpoint($med) {
        margin: 1em auto 3em;
        width: 90%;
    }

    @include breakpoint($lrg) {
        margin: 1em auto 4em;
        width: 65%;
        max-width: 80em;
    }
}

$text: mix(white, black, 100%);

.content {
    text-align: center;
    display: block;
    margin: 0 auto;
    max-width: 95%;
    line-height: 1.2;

    @include breakpoint($sml) {
        max-width: 90%;
        line-height: 1.3;
    }

    @include breakpoint($med) {
        max-width: 80%;
        line-height: 1.4;
    }

    @include breakpoint($lrg) {
        max-width: 80%;
    }

    width: 30em;
    color: $text;
    text-shadow: 0 1px 1px black, 0 0 0.75em rgba(black, 1);

    p {
        margin: 0 0 0.8em 0;
    }
}

.subtext {
    font-size: 0.65em;
    line-height: 1.3;
    color: mix($text, black, 75%);
}

hr {
    margin: 1em 0;
}

a,
.contact-link__text,
.social-link__text {
    color: $text;
    border-bottom: 1px solid mix($text, black, 80%);
    text-decoration: none;

    a:hover &,
    a:active &,
    a:focus & {
        color: white;
        border-color: white;
        background: rgba(white, 0.25);
    }
}

/* a */.button {
    font-size: 0.85em;
    font-weight: 700;
    background: #FEC130;
    color: black;
    display: inline-block;
    margin: 0 0 1em;
    padding: 0.6em 0.8em;
    text-shadow: none;
    border-radius: 0.35em;
    border: none;

    &:hover,
    &:active {
        color: black;
        background: white;
        border: none;
        box-shadow: inset 0 0 0 0.15em #FEC130;
        border-radius: 0.5em;
    }
}

.content--main {
    font-size: 1em;

    @include breakpoint($sml) {
        font-size: 1.25em;
    }

    @include breakpoint($med) {
        font-size: 1.25em;
    }

    @include breakpoint($lrg) {
        font-size: 1.5em;
    }
}

.content--secondary {
    margin-top: 3em;
    font-size: 0.9em;
    padding-bottom: 2em;
}

/* a */.contact-link {
    padding: 1em;
    border: none;
    display: block;

    @include breakpoint($med) {
        display: inline;
    }
}

/* a */.social-link {
    font-size: 1.5em;
    margin: 0.5em 0.15em;
    padding: 0.25em 0.5em;
    border: none;
    display: inline-block;
    border-radius: 0.5em;

    &:hover,
    &:active,
    &:focus {
        background: rgba(white, 0.25);
    }
}

.inlinesvg .social-link__text {
    display: none;
}
.inlinesvg .social-link__icon {
    margin: 0;
}

.no-inlinesvg .social-link__icon,
.no-inlinesvg .contact-link__icon {
    display: none;
}

/**
 * Icons
 */
[class^="icon-"], [class*=" icon-"] {
    display: inline-block;
    width: 1em;
    height: 1em;
    fill: currentColor;
    margin-right: 0.25em;
    position: relative;
    top: 0.1em;

    svg {
        max-width: 100%;
        max-height: 100%;
    }

    &.icon-phone {
        width: 1.2em;
        height: 1.2em;
        top: 0.2em;
        margin-right: 0.1em;
    }

    &.icon-facebook svg {
        position: relative;
        top: -0.025em;
        left: 0.05em;
    }
}